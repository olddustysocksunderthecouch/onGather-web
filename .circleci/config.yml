version: 2.1

# --------------------------------
# common : base
# --------------------------------

base_node: &base_node
  docker:
    - image: circleci/node:10.18.1

# --------------------------------
# common : steps
# --------------------------------

step_cache_restore_npm: &step_cache_restore_npm
  name: 'Restore Cache: NPM Dependencies'
  keys:
    - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
    - node-v1-{{ .Branch }}-
    - node-v1-

step_cache_save_npm: &step_cache_save_npm
  name: 'Save Cache: NPM Dependencies'
  paths:
    - ~/usr/local/lib/node_modules # location depends on npm version
  key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}

step_run_node_env_info: &step_run_node_env_info
  name: 'Print Environment Info'
  command: |
    . ./.circleci/utils.sh
    print_heading "environment versions:"
    print_os_versions
    print_node_versions
    print_docker_versions

step_run_update_npm: &step_run_update_npm
  name: 'Update NPM To The most recent release'
  shell: /bin/bash
  command: |
    sudo npm install -g npm@next

step_run_install_npm_dependencies: &step_run_install_npm_dependencies
  name: 'Install NPM Dependencies'
  shell: /bin/bash
  command: |
    npm install

step_lint: &step_lint
  name: 'Lint'
  command: |
    npm run lint

step_npm_audit: &step_npm_audit
  name: 'Audit NPM Dependencies'
  command: |
    npm run npm:audit

step_test: &step_test
  name: 'Tests'
  command: |
    npm run _test:ci

step_build: &step_build
  name: 'Build the Project'
  command: |
    npm run build


step_run_install_firebase: &step_run_install_firebase
  name: 'Install Firebase'
  shell: /bin/bash
  command: |
    npm install -D firebase-tools

step_deploy_dev_firebase: &step_deploy_dev_firebase
  name: Firebase Dev Deploy
  command: |
   command: cd project &&  ./node_modules/.bin/firebase deploy -P ongather-dev --only hosting:ongather-dev --token=$FIREBASE_TOKEN
  

step_deploy_prod_firebase: &step_deploy_prod_firebase
  name: Firebase Deploy
  command: |
      command: cd project &&  ./node_modules/.bin/firebase deploy -P ongather-b1834 --only hosting on-gather --token=$FIREBASE_TOKEN

step-install-aws: &step-install-aws
  name: Install AWSCLI
  command: |
    sudo apt-get update && sudo apt-get install -qq -y python-pip libpython-dev
    sudo pip install -q awscli --upgrade
    sudo pip install -q awsebcli --upgrade

step-deploy-staging: &step-deploy-staging
  name: Deploy to staging
  command: |
    aws s3 sync build s3://${S3_BUCKET_STAGING}

# --------------------------------
# jobs 
#       - run: *step_test

# --------------------------------

jobs:
  build-test:
    <<: *base_node
    steps:
      - checkout
      - run: *step_run_update_npm
      - restore_cache: *step_cache_restore_npm
      - run: *step_run_node_env_info
      - run: *step_run_install_npm_dependencies
      - save_cache: *step_cache_save_npm
      # - run: *step_npm_audit
      # - run: *step_lint
      - run: *step_build
      - run: *step_run_install_firebase
      - run: *step_deploy_dev_firebase
      - persist_to_workspace:
          root: .
          paths:
            - build
  deploy-staging:
    <<: *base_node
    working_directory: ~/deploy
    steps:
      - checkout:
          path: ~/deploy
      - attach_workspace:
          at: ~/deploy
      - run: *step_run_install_firebase
      - run: *step_deploy_dev_firebase


# --------------------------------
# workflows
# --------------------------------

workflows:
  version: 2
  build:
    jobs:
      - build-test
      - deploy-staging:
          requires:
            - build-test
          filters:
            branches:
              only:
                - develop
